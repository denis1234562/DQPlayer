<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
                    xmlns:converters="clr-namespace:DQPlayer.MVVMFiles.Converters">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <ControlTemplate x:Key="VerticalSlideThumbTemplate" TargetType="{x:Type Thumb}">
        <Canvas SnapsToDevicePixels="True">
            <Path x:Name="LeftArrow" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF000000" Fill="#FF000000"
                  Data="F1 M 276.761,316L 262.619,307.835L 262.619,324.165L 276.761,316 Z " RenderTransformOrigin="0.5,0.5" Width="6" Height="8">
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform Y="6" X="-3" />
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
            <Path x:Name="RightArrow" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF000000" Fill="#FF000000" 
                  Data="F1 M 276.761,316L 262.619,307.835L 262.619,324.165L 276.761,316 Z " RenderTransformOrigin="0.5,0.5"  Width="6" Height="8">
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform />
                        <RotateTransform Angle="-180" />
                        <TranslateTransform Y="6" X="8" />
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Canvas>
    </ControlTemplate>

    <Style x:Key="VerticalSlideThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Height" Value="12" />
        <Setter Property="Width" Value="11" />
        <Setter Property="Foreground" Value="Gray" />
        <Setter Property="Template" Value="{StaticResource VerticalSlideThumbTemplate}" />
    </Style>

    <ControlTemplate x:Key="ColorSpectrumSliderTemplate" TargetType="{x:Type xctk:ColorSpectrumSlider}">
        <Grid>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="0,8,0,0">
                <Border x:Name="PART_TrackBackground" Width="15">
                    <Rectangle x:Name="PART_SpectrumDisplay" Stretch="Fill" VerticalAlignment="Stretch" />
                </Border>
            </Border>
            <Track Name="PART_Track">
                <Track.Thumb>
                    <Thumb Style="{StaticResource VerticalSlideThumbStyle}"/>
                </Track.Thumb>
            </Track>
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type xctk:ColorSpectrumSlider}">
        <Setter Property="BorderBrush" Value="DarkGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Minimum" Value="0" />
        <Setter Property="Maximum" Value="360" />
        <Setter Property="TickFrequency" Value="0.001" />
        <Setter Property="IsSnapToTickEnabled" Value="True" />
        <Setter Property="IsDirectionReversed" Value="False" />
        <Setter Property="IsMoveToPointEnabled" Value="True" />
        <Setter Property="Value" Value="0" />
        <Setter Property="Template" Value="{StaticResource ColorSpectrumSliderTemplate}" />
    </Style>

    <ControlTemplate x:Key="ColorCanvasTemplate" TargetType="{x:Type xctk:ColorCanvas}">
        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="3">
            <Grid Margin="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Border BorderThickness="1" BorderBrush="DarkGray" ClipToBounds="True" Background="{DynamicResource ControlBackgroundBrush}">
                        <Canvas x:Name="PART_ColorShadingCanvas" Width="200" Height="100" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Rectangle x:Name="ColorShadingRectangle"
                                       Height="{Binding ElementName=PART_ColorShadingCanvas, Path=Height}"
                                       Width="{Binding ElementName=PART_ColorShadingCanvas, Path=Width}"
                                       Fill="{Binding SelectedColor, ElementName=PART_SpectrumSlider, Converter={converters:ColorToSolidColorBrushConverter}}"/>
                            <Rectangle x:Name="WhiteGradient"
                                       Width="{Binding ElementName=PART_ColorShadingCanvas,Path=Width}"
                                       Height="{Binding ElementName=PART_ColorShadingCanvas,Path=Height}">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Offset="0" Color="#ffffffff" />
                                        <GradientStop Offset="1" Color="Transparent" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="BlackGradient"
                                       Width="{Binding ElementName=PART_ColorShadingCanvas,Path=Width}"
                                       Height="{Binding ElementName=PART_ColorShadingCanvas,Path=Height}">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0, 0">
                                        <GradientStop Offset="0" Color="#ff000000"/>
                                        <GradientStop Offset="1" Color="#00000000"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Canvas x:Name="PART_ColorShadeSelector" Width="10" Height="10" IsHitTestVisible="False">
                                <Ellipse Width="10" Height="10" StrokeThickness="3" Stroke="#FFFFFFFF" IsHitTestVisible="False" />
                                <Ellipse Width="10" Height="10" StrokeThickness="1" Stroke="#FF000000" IsHitTestVisible="False" />
                            </Canvas>
                        </Canvas>
                    </Border>

                    <Border Grid.Row="1" Grid.Column="0" Margin="0,5,0,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="SelectedColorBorder" Grid.Column="0" Background="{DynamicResource ControlBackgroundBrush}" Height="22" 
                                    Margin="2,0" BorderThickness="1" BorderBrush="#FFC9CACA">
                                <Rectangle x:Name="SelectedColor" 
                                           Fill="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}, Converter={converters:ColorToSolidColorBrushConverter}}" />
                            </Border>
                            <TextBox x:Name="PART_HexadecimalTextBox" Grid.Column="1" Margin="2,0" VerticalAlignment="Center" Style="{DynamicResource {x:Type TextBox}}"/>
                        </Grid>
                    </Border>

                    <Border Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Margin="4,-8,0,0" ClipToBounds="False">
                        <xctk:ColorSpectrumSlider x:Name="PART_SpectrumSlider" VerticalAlignment="Stretch"/>
                    </Border>
                </Grid>

                <Border x:Name="RGBBorder" Grid.Row="1" MinWidth="180" BorderThickness="1" ClipToBounds="True" Margin="0,10,0,0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="44" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Row="0" Grid.Column="0" Foreground="{DynamicResource TextBrush}" Text="R" VerticalAlignment="Center"/>
                        <Slider x:Name="PART_RSlider" Grid.Row="0" Grid.Column="1" Maximum="255" SmallChange="1" LargeChange="10" TickFrequency="1"
                                Margin="4,6" Value="{Binding R, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center"/>
                        <xctk:ByteUpDown Grid.Row="0" Grid.Column="2" Foreground="{DynamicResource TextBrush}" Value="{Binding Value, ElementName=PART_RSlider}" 
                                         VerticalAlignment="Center" Background="Transparent"/>

                        <TextBlock Grid.Row="1" Grid.Column="0" Foreground="{DynamicResource TextBrush}" Text="G" VerticalAlignment="Center"/>
                        <Slider x:Name="PART_GSlider" Grid.Row="1" Grid.Column="1" Maximum="255" SmallChange="1" LargeChange="10" TickFrequency="1"
                                Margin="4,6" Value="{Binding G, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center"/>
                        <xctk:ByteUpDown Grid.Row="1" Grid.Column="2" Foreground="{DynamicResource TextBrush}" Value="{Binding Value, ElementName=PART_GSlider}"
                                         VerticalAlignment="Center" Background="Transparent"/>

                        <TextBlock Grid.Row="2" Grid.Column="0" Foreground="{DynamicResource TextBrush}" Text="B" VerticalAlignment="Center"/>
                        <Slider x:Name="PART_BSlider" Grid.Row="2" Grid.Column="1" Maximum="255" SmallChange="1" LargeChange="10" TickFrequency="1"
                                Margin="4,6" Value="{Binding B, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center"/>
                        <xctk:ByteUpDown Grid.Row="2" Grid.Column="2" Foreground="{DynamicResource TextBrush}" Value="{Binding Value, ElementName=PART_BSlider}"
                                         VerticalAlignment="Center" Background="Transparent"/>
                        
                        <TextBlock Grid.Row="3" Grid.Column="0" Foreground="{DynamicResource TextBrush}" Text="A" VerticalAlignment="Center"
                                   Visibility="{Binding Path=UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <Slider x:Name="PART_OpacitySlider" Grid.Row="3" Grid.Column="1" Maximum="255" SmallChange="1" LargeChange="10" Margin="4,6"
                                Value="{Binding Path=A, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" 
                                Visibility="{Binding Path=UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <xctk:ByteUpDown Grid.Row="3" Grid.Column="2" Foreground="{DynamicResource TextBrush}" Value="{Binding Value, ElementName=PART_OpacitySlider}"
                                         VerticalAlignment="Center" Background="Transparent"
                                         Visibility="{Binding Path=UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </Grid>
                </Border>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
            <Trigger Property="SelectedColor" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" TargetName="PART_ColorShadeSelector" />
                <Setter Property="Background" Value="Transparent" TargetName="SelectedColorBorder" />
                <Setter Property="IsEnabled" Value="False" TargetName="RGBBorder" />
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" TargetName="RGBBorder" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type xctk:ColorCanvas}">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:ResourceKeys.ControlNormalBorderKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template" Value="{StaticResource ColorCanvasTemplate}"/>
    </Style>
</ResourceDictionary>